<h1>About</h1>
<p>cmsimde_site</p>
<p>=======</p>
<p>終於，SSH要成功了嗎? 20230316 By 40723217</p>
<p>=======</p>
<p>0413，重新測試SSH putty推送</p>
<h1>SSH同步</h1>
<p>用SSH同步的方法:</p>
<p></p>
<p>首先須下載putty</p>
<p>使用<span>puttygen.exe製作鑰匙</span></p>
<p><span>puttygen.exe會根據游標移動軌跡製作獨一無二的鑰匙，製作完後，會得到兩把鑰匙</span></p>
<p><span>上面較長的是放在網路上的，也就是要貼到自己github帳號下的SSH鑰匙</span></p>
<p><span><img alt="" height="96" src="/images/5.jpg" width="528"/></span></p>
<p><span>而另一把則是私人的鑰匙，用來對應github上的這一把，將它存在Y槽(為確保可攜系統到另一個裝置時能確實找到)，格式一定要是.ppk</span></p>
<p><span></span></p>
<p><span>開啟putty.exe</span></p>
<p><span><img alt="" height="195" src="/images/2.jpg" width="396"/></span></p>
<p><span>HostName(or IP address)這欄打上github.com，因為我們是使用github建立網站的</span></p>
<p><span>Saved Sessions打上任意英數字串 例:ABC</span></p>
<p><span><img alt="" height="310" src="/images/3.jpg" width="423"/></span></p>
<p><span>左側Connection&gt;SSH&gt;Auth&gt;Credentials，Pirvate key file for authentication這欄找到剛剛存在Y槽的鑰匙，然後回到最上面Save</span></p>
<p><span>之後按右下的Open就完成了</span></p>
<p><span></span></p>
<p><span>到小組倉儲站</span></p>
<p><span><img alt="" height="360" src="/images/4.jpg" width="400"/></span></p>
<p><span>Code底下copy網址，選使用SSH的</span></p>
<p><span>把@後的github.com替換成剛才putty.exe中Saved Sessions打的任意英數 例:ABC</span></p>
<p><span>進入tmp，git clone 改完的網址，空格後打上將要建立的資料夾名稱</span></p>
<p>就成功使用SSH，clone小組倉儲的內容到近端了</p>
<p>之後要更改小組站時，只要進到這個新資料夾就能直接打指令了</p>
<p><span> </span></p>
<h2>關於git pull</h2>
<p><span></span>當小組有複數的成員要編輯小組站時，會遇到近端和遠端的內容不相符的情況</p>
<p>這時候就需要先將遠端的內容git pull到自己的近端</p>
<p>但是當組員A更新了小組站內容，組員B卻沒有先git pull就直接cms上去更新網站時，就會發生衝突</p>
<p>導致之後都無法進行acp</p>
<p></p>
<p>目前想到最簡單的方法就是每當有組員更新小組站時，其他組員下次開啟時就先gut pull，並且不要同時更新</p>
<p><span></span></p>
<h1>bubbleRobTutorial</h1>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/KS94BnPma7c" title="YouTube video player" width="560"></iframe><br/><button class="winkVideoControlBarPauseButtonClass"></button></p>
<h1>bubblerob-control</h1>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/-Je4LNLld3I" title="YouTube video player" width="560"></iframe></p>
<p><button class="winkVideoControlBarPauseButtonClass">
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
</button></p>
<div class="winkVideoControlBarProgressThumbClass">製作人員:40723217 林立翔</div>
<div class="winkVideoControlBarProgressThumbClass">             40923241 蔡淳宇</div>
<div class="winkVideoControlBarProgressThumbClass">
<div class="winkVideoControlBarClass">報告心得</div>
<div class="winkVideoPlayOverlayClass"><span>CoppeliaSim可以用於自走車模擬，讓使用者可以在不破壞實物的情況下進行自走車測試，使用CoppeliaSim模擬自走車的好處之一是可以進行快速更新，並立即測試新的功能。在自走車的前端設定了一個偵測前方環境的感應器，可以用於設定當碰到物體時就轉向的功能。而在加入方向鍵輸入的設定後，就能使用方向鍵操控自走車移動，並推動球體。</span></div>
</div>
<p><button class="winkVideoControlBarPauseButtonClass">
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
</button></p>
<h2>0420-1hr</h2>
<p dir="auto">我使用了chatgpt和三個小時的奮戰下，終於讓自己能夠在宿舍也能使用可攜系統進行bubbleRob的鍵盤操作了。<br/>以下是解決的一半過程對話:(Q代指我、A代指chatgpt)</p>
<p dir="auto">Q:我在Scite上遇到了"系統找不到指定的檔案。" 但我不清楚是甚麼原因，能列舉可能的原因嗎?</p>
<p dir="auto">A:"系統找不到指定的檔案" 是一個錯誤訊息，通常代表了一個檔案或路徑並不存在或無法被找到。以下是可能導致這個錯誤的原因：</p>
<p dir="auto">1.檔案或路徑不存在：這是最常見的原因，檔案或路徑可能已被刪除、移動或更改名稱。<br/>2.權限不足：如果您不擁有足夠的權限來訪問該檔案或路徑，系統就會報告此錯誤。<br/>3.檔案或路徑正在使用中：如果檔案或路徑正在被其他程式使用，例如正在被其他程式打開，您就無法訪問它。<br/>4.磁碟問題：如果您的硬碟遇到了問題，例如壞道或損壞，也可能會導致系統找不到指定的檔案。<br/>5.程式錯誤：有時候程式本身也可能導致這個錯誤，可能是因為程式中存在錯誤或不正確的路徑設置。</p>
<p dir="auto">建議您檢查檔案路徑是否正確，確認您有足夠的權限來訪問檔案，並關閉其他正在使用檔案的程式。如果問題仍然存在，您可以嘗試重新啟動您的電腦，或檢查您的硬碟是否存在問題。</p>
<p dir="auto">Q:那麼在Scite的輸出欄位中出現"pyw -u 文件"代表著甚麼意思?</p>
<p dir="auto">A:在 Scite 的輸出欄位中出現 "pyw -u 文件" 代表著正在執行一個 Python 程式，其中：</p>
<p dir="auto">"pyw" 是 Python 的執行檔案名稱，通常用於執行 GUI 應用程式。<br/>"-u" 代表著執行 Python 程式時使用的參數，這裡 "-u" 是代表使用 unbuffered I/O（無緩衝輸入輸出）。<br/>"文件" 是指正在執行的 Python 程式的檔案名稱。<br/>因此，"pyw -u 文件" 意味著 Scite 正在使用 Python 執行檔案執行指定的 Python 程式檔案，並使用 unbuffered I/O 參數。</p>
<p dir="auto">Q:那麼如果Scite執行了這個檔案中的代碼，並出現找不到指定檔案，你認為會是哪種問題?</p>
<p dir="auto">A:如果在 Scite 中執行 Python 程式時出現 "系統找不到指定的檔案" 的錯誤訊息，通常代表著程式中的某個檔案無法被找到，可能是以下原因之一：</p>
<p dir="auto">1.路徑不正確：程式中指定的路徑可能是不正確的，例如路徑名稱有誤、縮寫或空格使用不當等。<br/>2.檔案不存在：程式中指定的檔案可能不存在，例如該檔案被刪除或被移動到了其他地方。<br/>3.權限不足：程式無法訪問該檔案，可能是因為權限不足或該檔案被鎖定而無法被訪問。<br/>4.檔案正在被其他程式使用：可能是因為該檔案正在被其他程式使用而無法被訪問。</p>
<p dir="auto">如果程式中指定的檔案名稱和路徑都是正確的，可以檢查一下該檔案是否存在，並且您是否擁有足夠的權限來訪問該檔案。如果該檔案存在，請確保該檔案沒有被其他程式鎖定。另外，您也可以嘗試使用絕對路徑或相對路徑指定檔案的位置，以確保程式可以正確找到該檔案。</p>
<p dir="auto">//到這裡，看來我白問了不少問題。</p>
<h2>0420-hr2</h2>
<p dir="auto">Q:我沒有移動檔案，單純只是在Scite的上輸入python代碼 print("hi") ，然後儲存在Scite的根目錄上，卻還是發生上述問題，該如何解決?</p>
<p dir="auto">A:如果您在 Scite 的根目錄中建立一個 Python 檔案，並在該檔案中加入 print("hi") 代碼，然後在 Scite 中運行該檔案時出現了 "系統找不到指定的檔案" 的錯誤，這可能是因為 Scite 沒有正確設置當前工作目錄。</p>
<p dir="auto">請確保您正在使用的 Scite 版本支援當前工作目錄設置，並且您已經正確地設置了當前工作目錄。您可以在 Scite 中通過點擊 "Options" 菜單中的 "Open User Options File" 來編輯 Scite 的用戶設置文件，然後添加以下行：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">cwd=$(FilePath)</pre>
<p dir="auto"><br/><br/>這個設置將當前工作目錄設置為當前打開的檔案所在的目錄。這樣，當您運行 Python 程式時，Python 將會在當前工作目錄中搜索檔案，而不是在 Scite 的根目錄中搜索檔案，從而避免 "系統找不到指定的檔案" 的錯誤。</p>
<p dir="auto">Q:我已經嘗試加入了以上代碼<br/>目前我的環境如下(以基本目錄為Y硬碟):<br/>Y:\wscite 為Scite目錄<br/>Y:\Python310 為python3.10.0目錄<br/>而python代碼 print("hi") 儲存名稱為 test.py 並儲存在scite目錄下<br/>但依舊出現同樣的問題，該如何解決?</p>
<p dir="auto">A:如果您已經在 Scite 的用戶設置文件中設置了當前工作目錄，但仍然出現 "系統找不到指定的檔案" 的錯誤，您可以試試以下解決方案：<br/>1.確保 Python 已經安裝並設置好環境變數：請確保 Python 已經成功安裝在您的電腦上，並且已經設置好環境變數，以便您可以在命令提示符號或 Scite 中運行 Python 程式。<br/>2.檢查 Scite 設置：請確保 Scite 的設置正確，例如編譯器路徑、Python 版本等。<br/>3.檢查 Python 程式碼：請確保您的 Python 程式碼沒有錯誤，例如語法錯誤或拼寫錯誤等。<br/>4.嘗試使用絕對路徑：請嘗試使用絕對路徑指定 Python 程式碼所在的位置，以確保 Scite 可以正確找到該檔案。例如，在 Scite 中使用以下代碼來執行您的 Python 程式碼：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import os os.system("Y:/wscite/Python310/python.exe Y:/wscite/test.py")</pre>
<p dir="auto"><br/><br/>這個代碼將 Python 程式碼 test.py 所在的絕對路徑傳遞給 Python 解釋器，從而避免了 "系統找不到指定的檔案" 的錯誤。<br/>如果以上方法仍然無法解決問題，您可以嘗試重新安裝 Scite 和 Python，或者嘗試使用其他的程式碼編輯器來編輯和運行 Python 程式碼。</p>
<p dir="auto">Q:我發現它輸入此程式碼後跳亂碼了......</p>
<p dir="auto">A:如果您在 Scite 中輸入 Python 程式碼後出現亂碼，可能是因為 Scite 的編碼格式與您的 Python 程式碼的編碼格式不一致所導致的。<br/>您可以嘗試以下方法解決問題：<br/>設置 Scite 的編碼格式：打開 Scite，從菜單欄選擇「選項」 &gt;「編輯器設置」 &gt;「默認編碼」，選擇與您的 Python 程式碼相同的編碼格式。<br/>轉換 Python 程式碼的編碼格式：使用一些編輯器工具（例如 Notepad++）將您的 Python 程式碼轉換為 Scite 使用的編碼格式，以確保 Scite 正確顯示您的程式碼。<br/>在程式碼中添加編碼宣告：在 Python 程式碼的開頭添加一行編碼宣告，例如：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># -*- coding: utf-8 -*-</pre>
<p dir="auto"><br/><br/>這個宣告將告訴 Python 程式碼的解釋器使用 UTF-8 編碼格式來解讀程式碼。<br/>希望以上方法能夠幫助您解決問題。</p>
<p dir="auto">Q:在運行 import os<br/>os.system("Y:/wscite/Python310/python.exe Y:/wscite/test.py")<br/>程式碼後，問題依舊是找不到指定的檔案<br/>要不然試著一個個排除吧</p>
<p dir="auto">在那之後就是一大段的排除錯誤。</p>
<p dir="auto">當我進行到半個鐘頭後，也步入了正軌。</p>
<p dir="auto"><br/>A:如果在打開 Open User Options 後看到空白的介面，這代表你的 Scite 還沒有任何設置選項。你可以手動添加設置選項，方法如下：</p>
<p dir="auto">創建一個空白的文本檔案。<br/>將以下內容複製到文件中：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#This is an example SciTE properties file with a couple of settings
#that show how to configure SciTE to work with Python.
#Define the location of the Python executable.
command.go.*.py=python3 -u $(FileNameExt)
#Enable the Python lexer.
lexer.$(file.patterns.py)=python
#Set the encoding for Python source code files.
code.page=65001</pre>
<p dir="auto"><br/><br/>將文件保存到 Scite 的配置文件夾中。你可以通過選擇「選項」&gt;「打開配置文件夾」找到配置文件夾。在文件名輸入框中輸入「SciTEUser.properties」，然後點擊「保存」。</p>
<p dir="auto">重新啟動 Scite，你應該可以看到新添加的選項已經生效了。<br/>注意：如果你的 Python 安裝路徑與預設路徑不同，你需要修改以上代碼中的 Python 執行路徑。</p>
<p dir="auto">接著，我的SciTE終於開始運作了！</p>
<h2>0420-hr3</h2>
<p>這邊補充有關一步步解決問題的地方。</p>
<p>Q:第一步，確保 Python 已經安裝並設置好環境變數：請確保 Python 已經成功安裝在您的電腦上，並且已經設置好環境變數，以便您可以在命令提示符號或 Scite 中運行 Python 程式。 我已經確認好我的python已經正確安裝，但是我要怎麼知道它的環境變數?</p>
<p><span>A:您可以在命令提示符號中輸入 "python"，然後按下 Enter 鍵，這會啟動 Python 交互式命令行界面。接著，輸入以下代碼：</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sys
print(sys.path)
</pre>
<p>這將顯示 Python 程式碼的環境變數路徑列表。確認其中是否包含您的 Python 安裝路徑 (例如 Y:\Python310)。</p>
<p>如果該路徑未出現在列表中，您可以在系統的環境變數中手動添加它。步驟如下：</p>
<ol>
<li>按下 Win + R 快捷鍵打開“運行”對話框</li>
<li>輸入 "sysdm.cpl"，按下 Enter 鍵</li>
<li>這會打開「系統屬性」窗口，點擊「進階」選項卡，然後點擊「環境變數」按鈕</li>
<li>在「系統變數」區域中，找到「Path」變數，並點擊「編輯」按鈕</li>
<li>在「編輯環境變數」窗口中，點擊「新建」按鈕，然後添加您的 Python 安裝路徑 (例如 Y:\Python310)</li>
<li>確認所有窗口，並重新啟動 Scite。</li>
</ol>
<p>完成這些步驟後，您應該可以在 Scite 中運行您的 Python 程式碼了。</p>
<p>Q:<span>好，確定存在Y:\Python310，那麼第二步: 檢查 Scite 設置：請確保 Scite 的設置正確，例如編譯器路徑、Python 版本等。 我要怎麼查看Scite設置的編譯器路徑、Python 版本?</span></p>
<p>A:打開 Open User Options 後看到空白的介面，這代表你的 Scite 還沒有任何設置選項。你可以手動添加設置選項，方法如下：</p>
<ol>
<li>創建一個空白的文本檔案。</li>
<li>將以下內容複製到文件中：
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># This is an example SciTE properties file with a couple of settings
# that show how to configure SciTE to work with Python.

# Define the location of the Python executable.
command.go.*.py=python3 -u $(FileNameExt)

# Enable the Python lexer.
lexer.$(file.patterns.py)=python

# Set the encoding for Python source code files.
code.page=65001
</pre>
</li>
<li>
<p>將文件保存到 Scite 的配置文件夾中。你可以通過選擇「選項」&gt;「打開配置文件夾」找到配置文件夾。在文件名輸入框中輸入「SciTEUser.properties」，然後點擊「保存」。</p>
</li>
<li>
<p>重新啟動 Scite，你應該可以看到新添加的選項已經生效了。</p>
</li>
</ol>
<p><span>有進展了！當我輸入print("hi")的時候，不再只是出現找不到指定檔案，而是如下: &gt;python3 -u test.py &gt;Exit code: 9009</span></p>
<p><span>這樣，就是排除找不到路徑問題的解決方案</span></p>
<h2>0420-hr4</h2>
<p>接著我便遇到了<span>&gt;python3 -u test.py &gt;Exit code: 9009 的問題，繼續使用chatgpt解決問題。</span></p>
<p><span>A:</span>錯誤代碼9009通常表示找不到可執行的命令。在這種情況下，可能是由於系統環境變數中的路徑未設置正確所致。</p>
<p>您可以嘗試檢查系統環境變數，並確保Python的路徑已經被添加到Path變數中。如果沒有，請將Python的安裝路徑添加到Path中。在Windows上，您可以這樣做：</p>
<ol>
<li>開啟「控制台」並點擊「系統」</li>
<li>點擊「進階系統設置」</li>
<li>在「環境變數」下找到「Path」並點擊「編輯」</li>
<li>在新的窗口中，點擊「新增」，並添加Python的安裝路徑（例如：C:\Python310）</li>
<li>點擊「確定」，保存所有更改</li>
</ol>
<p>完成後，關閉Scite並重新打開，然後再次嘗試運行您的Python代碼，看看問題是否已經解決了。</p>
<p>Q:<span>我將環境變數的「path」已經添加了Y:\Python310作為路徑，但問題依舊沒有解決，該如何是好?</span></p>
<p>A:如果已經設置好環境變數，而且路徑中已經包含了 Python 的安裝路徑，那麼可能問題出現在 Scite 的設置中。請再次檢查 Scite 的設置，確保以下兩點：</p>
<ol>
<li>
<p>編譯器路徑：在 Scite 中選擇「選項」&gt;「編譯器設置」，確認 Python 的執行檔路徑是否正確設置為 Y:\Python310\python.exe。如果路徑不正確，請修改為正確的路徑。</p>
</li>
<li>
<p>Python 版本：同樣在「編譯器設置」中，確認所選擇的 Python 版本是否與安裝在電腦上的版本相對應。如果版本不對應，請選擇正確的版本。</p>
</li>
</ol>
<p>如果以上兩點都確認無誤，那麼可能是 Scite 的某些設置或者系統環境的問題，這時可以考慮卸載 Scite 並重新安裝，或者嘗試在其他電腦上運行相同的代碼，檢查是否存在相同的問題。</p>
<p>Q:<span>如果我想為Scite正確設置python路徑，我該如何在 Open User Options 中添加「Y:\Python310\python.exe」路徑?</span></p>
<p><span>並且我的 Open User Options 是一片空白，只有你方才要我添加的</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># This is an example SciTE properties file with a couple of settings
# that show how to configure SciTE to work with Python.

# Define the location of the Python executable.
command.go.*.py=python3 -u $(FileNameExt)

# Enable the Python lexer.
lexer.$(file.patterns.py)=python

# Set the encoding for Python source code files.
code.page=65001
</pre>
<p><span>這樣仍然不足，那請問是要修哪邊?</span></p>
<p>A:<span>如果你的 Open User Options 中只有上述內容，那麼可以手動添加以下內容來指定 Python 路徑：</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># Define the location of the Python executable.
command.go.*.py=python Y:/wscite/Python310/python.exe "$(FilePath)"</pre>
<p><span>請將上述內容添加至 Open User Options，然後保存並重新啟動 Scite。之後嘗試運行你的 Python 程式，看看是否能夠正常執行。</span></p>
<p><span>Q:「Y:/wscite/Python310/python.exe "$(FilePath)"」是指我安裝python310的路徑嗎?</span></p>
<p><span>A:是的，这里的路径指的是你安装 Python 3.10 的路径。如果你安装的 Python 版本不是 3.10，那么你需要将路径中的 "Python310" 替换为你安装的 Python 版本号。</span></p>
<p><span>Q:但我的路徑是「Y:\Python310\python.exe」 而我的Scite路徑則是「Y:\wscite\sciTE.exe」 請修正一下上方代碼</span></p>
<p><span>A:非常抱歉，我打錯了，下面是正確的代碼：</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">command.go.*.py=Y:/Python310/python.exe "$(FilePath)"
</pre>
<p><span>請注意反斜線改成斜線，並且路徑前加上磁盤標記Y:，如此一來，Scite就能夠找到Python的路徑了。</span></p>
<p><span>我終於讓我的Scite找到路徑了！終於能夠啟動.py檔案了</span></p>
<p><span>到了這裡，終於不再出現9009錯誤，我也得以啟動py檔案。</span></p>
<h2><span>0420-hr5</span></h2>
<p><span>Q:下一個問題是在python程式中，import keyboard應該是意旨匯入"鍵盤"的函式，我的理解有誤嗎?</span></p>
<p><span>A:你的理解有一點小錯誤，<code>keyboard</code><span> 模組並不是匯入整個鍵盤的函式，而是一個 Python 第三方庫，可以用來監聽和模擬按鍵事件。在使用 </span><code>keyboard</code><span> 模組時，通常會使用其中的 </span><code>on_press</code><span> 和 </span><code>on_release</code><span> 方法來註冊按鍵事件的處理函數，或者使用 </span><code>send</code><span> 方法來模擬按鍵事件。</span></span></p>
<p><span>Q:好，謝謝你讓我理解了。那麼 Traceback (most recent call last): File "Y:\CoppeliaSimEdu\newbing_bubbleRob\newbing_bubbleRob_remoteapi1.py", line 5, in &lt;module&gt; import keyboard ModuleNotFoundError: No module named 'keyboard' </span></p>
<p><span>的錯誤而言，是代表著不存在這個第三方庫?</span></p>
<p><span>A:是的，這個錯誤提示意味著在你的 Python 環境中沒有安裝 <code>keyboard</code><span> 這個第三方庫。你需要先安裝這個庫才能在你的 Python 程式中使用它。你可以使用 </span><code>pip</code><span> 來安裝這個庫，請在終端機中輸入以下指令：</span></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">pip install keyboard
</pre>
<p><span>安裝完成後，你應該就可以在你的 Python 程式中成功匯入 </span><code>keyboard</code><span> 了。</span></p>
<p><span>Q:但我出現了 Fatal error in launcher: Unable to create process using '"F:\senior\mde2022\portable_python_3.10.6\Python310\python.exe" "y:\Python310\Scripts\pip.exe" install keyboard': ??????????? 這個問題...... 等等，這個F;\的路徑很奇怪，我想我得修復它 我的y槽路徑實際上是使用可攜帶系統虛擬的，路徑是"F:\3down\wcm2023\python311_w1_cd2023_cmsimde\data" 我該如何將上述路徑導正?</span></p>
<p><span>在這裡，我和chatgpt鬼打牆了，所以讓我們直接跳到正確方法。</span></p>
<p><span>A:這個錯誤提示說在執行命令 <code>"F:\senior\mde2022\portable_python_3.10.6\Python310\python.exe" "y:\Python310\Scripts\pip.exe" install keyboard</code><span> 時遇到了致命錯誤。具體原因可能有很多，但是根據你之前的描述，你使用的 Python 程序並非安裝在 </span><code>F:\senior\mde2022\portable_python_3.10.6\Python310\</code><span> 目錄下，而是安裝在 </span><code>F:\3down\wcm2023\python311_w1_cd2023_cmsimde\data\Python310\</code><span> 目錄下。因此，如果你想安裝 </span><code>keyboard</code><span> 模塊，你需要在命令行中使用正確的 Python 程序路徑和 pip 工具路徑。以下是可能適用於你的命令：</span></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">F:\3down\wcm2023\python311_w1_cd2023_cmsimde\data\Python310\python.exe -m pip install keyboard
</pre>
<p><span>這個命令使用了正確的 Python 程序路徑和 pip 工具路徑，它將 </span><code>keyboard</code><span> 模塊安裝在你的 Python 環境中。請注意，你需要在命令行中切換到包含上述 Python 程序的目錄中才能運行此命令。</span></p>
<p><span></span></p>
<p><span>最終，我的BubbleRob終於得以運行。</span></p>