<h1>About</h1>
<p>cmsimde_site</p>
<p>=======</p>
<p>終於，SSH要成功了嗎? 20230316 By 40723217</p>
<p>=======</p>
<p>0413，重新測試SSH putty推送</p>
<h1>SSH同步</h1>
<p>用SSH同步的方法:</p>
<p></p>
<p>首先須下載putty</p>
<p>使用<span>puttygen.exe製作鑰匙</span></p>
<p><span>puttygen.exe會根據游標移動軌跡製作獨一無二的鑰匙，製作完後，會得到兩把鑰匙</span></p>
<p><span>上面較長的是放在網路上的，也就是要貼到自己github帳號下的SSH鑰匙</span></p>
<p><span><img alt="" height="96" src="/images/5.jpg" width="528"/></span></p>
<p><span>而另一把則是私人的鑰匙，用來對應github上的這一把，將它存在Y槽(為確保可攜系統到另一個裝置時能確實找到)，格式一定要是.ppk</span></p>
<p><span></span></p>
<p><span>開啟putty.exe</span></p>
<p><span><img alt="" height="195" src="/images/2.jpg" width="396"/></span></p>
<p><span>HostName(or IP address)這欄打上github.com，因為我們是使用github建立網站的</span></p>
<p><span>Saved Sessions打上任意英數字串 例:ABC</span></p>
<p><span><img alt="" height="310" src="/images/3.jpg" width="423"/></span></p>
<p><span>左側Connection&gt;SSH&gt;Auth&gt;Credentials，Pirvate key file for authentication這欄找到剛剛存在Y槽的鑰匙，然後回到最上面Save</span></p>
<p><span>之後按右下的Open就完成了</span></p>
<p><span></span></p>
<p><span>到小組倉儲站</span></p>
<p><span><img alt="" height="360" src="/images/4.jpg" width="400"/></span></p>
<p><span>Code底下copy網址，選使用SSH的</span></p>
<p><span>把@後的github.com替換成剛才putty.exe中Saved Sessions打的任意英數 例:ABC</span></p>
<p><span>進入tmp，git clone 改完的網址，空格後打上將要建立的資料夾名稱</span></p>
<p>就成功使用SSH，clone小組倉儲的內容到近端了</p>
<p>之後要更改小組站時，只要進到這個新資料夾就能直接打指令了</p>
<p><span> </span></p>
<h2><span>關於git pull</span></h2>
<p><span></span>當小組有複數的成員要編輯小組站時，會遇到近端和遠端的內容不相符的情況</p>
<p>這時候就需要先將遠端的內容git pull到自己的近端</p>
<p>但是當組員A更新了小組站內容，組員B卻沒有先git pull就直接cms上去更新網站時，就會發生衝突</p>
<p>導致之後都無法進行acp</p>
<p></p>
<p>目前想到最簡單的方法就是每當有組員更新小組站時，其他組員下次開啟時就先gut pull，並且不要同時更新</p>
<p><span></span></p>
<h1>bubbleRobTutorial</h1>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/KS94BnPma7c" title="YouTube video player" width="560"></iframe></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="./../cmsimde/static" data-varname="winkVideoData" height="600" width="1000">
<source src="./../downloads/0318.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass">
<h1>bubbleRob-control-Tutorial</h1>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/-Je4LNLld3I" title="YouTube video player" width="560"></iframe></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
</div>
<div class="winkVideoControlBarProgressThumbClass">製作人員:40723217 林立翔</div>
<div class="winkVideoControlBarProgressThumbClass">             40923241 蔡淳宇</div>
</div>
<div class="winkVideoControlBarClass">報告心得</div>
<div class="winkVideoPlayOverlayClass"><span>CoppeliaSim可以用於自走車模擬，讓使用者可以在不破壞實物的情況下進行自走車測試，使用CoppeliaSim模擬自走車的好處之一是可以進行快速更新，並立即測試新的功能。在自走車的前端設定了一個偵測前方環境的感應器，可以用於設定當碰到物體時就轉向的功能。而在加入方向鍵輸入的設定後，就能使用方向鍵操控自走車移動，並推動球體。</span></div>
</div>